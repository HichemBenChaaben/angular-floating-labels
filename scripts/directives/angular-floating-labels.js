!function(){"use strict";angular.module("app.directives.floatinglabels",[]).directive("flLabel",["$compile",function(e){return{restrict:"A",priority:1,controller:"updateMaxCount",require:["^form","ngModel"],scope:{count:"=count",chars:"@chars"},link:function(l,r,a,t){function n(){r.addClass("js-field-has-value")}function s(){r.removeClass("js-field-has-value")}var f=a.placeholder,i="fl-frm__lbl--required",o="";if(console.log("here is the form name"+t.value),console.log("Loop inside the form"),a.required||(i=""),a.maxlength){var u=a.maxlength;l.chars=a.value.length;var o='<span class="js-char-counter {{flErrorClass}}"><span class="js-type">{{chars}}</span>/'+u+"</span>",c='<span class="fl-frm__lbl-txt--error ng-show="isError">{{flErrors}}</span>';o=e(o)(l),c=e(c)(l)}r.wrap('<label class="fl-frm__lbl '+i+'">').after(o).addClass("fl-frm__el fl-frm__el--txt").after('<span class="fl-frm__lbl-txt">'+f+"</span>").after(c),a.value&&a.value.length>0&&n(),"number"===a.type&&console.log("number...."),r.bind("keypress keyup",function(e){if("number"===a.type){var r=e.target.value;parseInt(r,10)||(e.target.value=r.substr(1,r.length-1))}l.chars=e.target.value.length,l.$apply()}),r.bind("keyup blur",function(e){return e.target.value.length>0?n():s()})}}}]).controller("updateMaxCount",function(e){var l=this;l.chars=e.value.length}).directive("flTip",function(){return{scope:!1,restrict:"A",priority:2,link:function(e,l,r){l.after('<span class="fl-frm__tooltip">'+r.flTip+"</span>")}}}).directive("flSelect",function(){return{restrict:"A",priority:1,link:function(e,l,r){var a=l.find("options")[0]||"Add a default item",t="fl-frm__lbl--required";r.required||(t=""),l.wrap('<label class="fl-frm__lbl '+t+'">').addClass("fl-frm__el fl-frm__el--sel placeholder").after('<span class="fl-frm__lbl-txt">'+a+"</span>")}}})}();